@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@* @using Authentication.AuthModel
@model Person *@
<html>
    <head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <!-- Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    
        <title>LoginPage</title>
    </head>
    <body>
    <div>
       <label>Մուտքանւն</label>
       <input type="text" id="Login" />
    </div>
    <div>
        <label>Գաղտնաբառ</label>
        <input type="text" id="Password" />
    </div>
    <div>
        <input type="button" value="Մուտք" id="Enter" />
        <input type="button" value="Index Page" id="index"  />
        <input type="button" value="logOut" id="logOut" />
    </div>
    <script src="JWTTokenSet.js"></script>
    <script>
        var tokenKey = "accessToken";
        // при нажатии на кнопку отправки формы идет запрос к /login для получения токена
        document.getElementById("Enter").addEventListener("click", async e => {
            e.preventDefault();
            // отправляет запрос и получаем ответ
            const response = await fetch("/Home/LoginIn", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    email: document.getElementById("Login").value,
                    password: document.getElementById("Password").value
                })
            });
            // если запрос прошел нормально
            if (response.ok === true) {
                // получаем данные
                const data = await response.json();
                // изменяем содержимое и видимость блоков на странице
                // document.getElementById("userName").innerText = data.username;
                // document.getElementById("userInfo").style.display = "block";
                // document.getElementById("loginForm").style.display = "none";
                // сохраняем в хранилище sessionStorage токен доступа
                sessionStorage.setItem(tokenKey, data.access_token);
            }
            else  // если произошла ошибка, получаем код статуса
                console.log("Status: ", response.status);
        });

        // кнопка для обращения по пути "/data" для получения данных
        document.getElementById("index").addEventListener("click", async e => {
            e.preventDefault();
            // получаем токен из sessionStorage
            const token = sessionStorage.getItem(tokenKey);
            // отправляем запрос к "/data
            const response = await fetch("/Home/Inde", {
                method: "GET",
                headers: {
                    "Accept": "application/json",
                    "Authorization": "Bearer " + token  // передача токена в заголовке
                }
            });

            // if (response.ok === true) {
            //     const data = await response.json();
            //     alert(data.message);
            // }
            // else
            //     console.log("Status: ", response.status);
        });

        // условный выход - просто удаляем токен и меняем видимость блоков
        document.getElementById("logOut").addEventListener("click", e => {

            e.preventDefault();
            // document.getElementById("userName").innerText = "";
            // document.getElementById("userInfo").style.display = "none";
            // document.getElementById("loginForm").style.display = "block";
            sessionStorage.removeItem(tokenKey);
        });
    </script>
    </body>
</html>

